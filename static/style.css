/***
    The new CSS reset - version 1.8.3 (last updated 21.1.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(
		:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
	) {
	all: unset;
	display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
	cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
	list-style: none;
}

/* For images to not be able to exceed their container */
img {
	max-inline-size: 100%;
	max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
	border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
	-webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
	white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
	-webkit-appearance: revert;
	appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
	all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
	color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
	content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
	display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable='false'])) {
	-moz-user-modify: read-write;
	-webkit-user-modify: read-write;
	overflow-wrap: break-word;
	-webkit-line-break: after-white-space;
	-webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable='true']) {
	-webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
	all: revert;
}

body {
	overflow-y: hidden;
	background-color: #1c1c1c;
	display: flex;
	flex-direction: column;
	color: white;
	height: 100vh;
}

#terminal {
	display: flex;
	flex-direction: column;
	height: 100%;
	padding: 4px;
}

#control-panel {
	gap: 8px;
	background-color: #ffffff0a;
	display: flex;
	padding: 16px;
	justify-content: left;
	font-family: 'Lato', sans-serif;
}

#control-panel input {
	background-color: white;
	color: #1c1c1c;
	padding: 6px 12px;
	border-radius: 8px;
	font-weight: 500;
}

.label-wrapper {
	display: flex;
	flex-direction: column;
	flex: 0 0 auto;
	gap: 3px;
}

.label-wrapper label {
	font-weight: 600;
	letter-spacing: 1px;
	text-transform: uppercase;
	font-size: 11px;
}

#command-line {
	font-family: 'Ubuntu Mono', monospace;
	padding-block: 4px;
}

#command-line::placeholder {
	color: rgba(255, 255, 255, 0.5);
}

#console {
	width: 100%;
	height: 100%;
	font-family: 'Ubuntu Mono', monospace;
	line-height: 1.2;

	scrollbar-width: thin;
	scrollbar-color: rgba(255, 255, 255, 0.5);
}

#console::-webkit-scrollbar {
	width: 4px;
}

#console::-webkit-scrollbar-track {
	background: transparent;
}

#console::-webkit-scrollbar-thumb {
	background-color: rgb(255, 255, 255);
	border-radius: 10px;
	border: 3px solid rgba(255, 255, 255, 0.5);
}
